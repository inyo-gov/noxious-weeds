---
title: "Pepperweed Populations LORP 2018â€“2025"
subtitle: "Interactive Analysis of Lepidium latifolium Distribution in Owens Valley"
author: "Noxious Weeds Monitoring Program"
date: today
format: 
  html:
    theme: cosmo
    toc: true
    toc-depth: 3
    code-fold: true
    code-tools: true
    embed-resources: true
    css: styles.css
  docx:
    toc: true
    toc-depth: 3
    number-sections: true
    reference-doc: custom-reference.docx
execute:
  echo: false
  warning: false
  message: false
prefer-html: true
---

```{r setup}
#| message: false
#| warning: false
library(sf)
library(dplyr)
library(tidyr)
library(leaflet)
library(leaflet.extras2)
library(lubridate)
library(htmltools)
library(knitr)
library(DT)
```

# Executive Summary

This interactive analysis examines the distribution and population dynamics of **Lepidium latifolium** (perennial pepperweed) in the Lower Owens River Project (LORP) area from 2018 to 2025. The data is sourced from the [ArcGIS Online Noxious Weeds 2025 feature service](https://services.arcgis.com/0jRlQ17Qmni5zEMr/arcgis/rest/services/Noxious_Weeds_2025_view/FeatureServer/0) and provides comprehensive insights into spatial occurrence over multiple years.


```{r data-loading}
#| message: false
#| warning: false

# ArcGIS Feature Service URL
base_url <- "https://services.arcgis.com/0jRlQ17Qmni5zEMr/arcgis/rest/services/Noxious_Weeds_2025_view/FeatureServer/0/query?"

# Query parameters for all data
query_params <- paste0(
  "where=1=1",
  "&outFields=*",
  "&f=geojson",
  "&outSR=4326"
)

# Construct full query URL
query_url <- paste0(base_url, query_params)

# Load data from ArcGIS feature service
pepper_data <- st_read(query_url, quiet = TRUE)

# Process dates - convert Unix timestamps to dates
pepper_data <- pepper_data %>%
  mutate(
    Date_Observed = as.POSIXct(Date/1000, origin='1970-01-01'),
    Date_Created = as.POSIXct(CreationDate/1000, origin='1970-01-01'),
    Year_Observed = year(Date_Observed),
    Year_Created = year(Date_Created),
    # Use creation year as fallback when observation year is missing
    Year_Display = ifelse(is.na(Year_Observed), Year_Created, Year_Observed),
    Date_Display = as.POSIXct(ifelse(is.na(Date_Observed), as.numeric(Date_Created), as.numeric(Date_Observed)), origin='1970-01-01')
  )

# Include all records (no year filtering)
# Separate data by display year (observation year with creation year fallback)
pepper_2018 <- pepper_data %>% filter(Year_Display == 2018)
pepper_2019 <- pepper_data %>% filter(Year_Display == 2019)
pepper_2020 <- pepper_data %>% filter(Year_Display == 2020)
pepper_2021 <- pepper_data %>% filter(Year_Display == 2021)
pepper_2022 <- pepper_data %>% filter(Year_Display == 2022)
pepper_2023 <- pepper_data %>% filter(Year_Display == 2023)
pepper_2024 <- pepper_data %>% filter(Year_Display == 2024)
pepper_2025 <- pepper_data %>% filter(Year_Display == 2025)

# Create recent vs historical comparison
pepper_recent <- pepper_data %>% filter(Year_Display >= 2022)
pepper_historical <- pepper_data %>% filter(Year_Display >= 2018 & Year_Display <= 2021)

# Summary statistics for all years (using display year with fallback)
summary_stats <- pepper_data %>%
  filter(!is.na(Year_Display)) %>%
  group_by(Year_Display) %>%
  summarise(
    Total_Observations = n(),
    Avg_Abundance = round(mean(Abundance, na.rm = TRUE), 1),
    Avg_Height = round(mean(Height, na.rm = TRUE), 1),
    Max_Abundance = max(Abundance, na.rm = TRUE),
    Records_With_Obs_Date = sum(!is.na(Year_Observed)),
    Records_With_Creation_Date_Only = sum(is.na(Year_Observed) & !is.na(Year_Created)),
    .groups = 'drop'
  ) %>%
  arrange(Year_Display)
```

## Data Overview

The dataset includes `r nrow(pepper_data)` total observations across `r length(unique(pepper_data$Year_Display[!is.na(pepper_data$Year_Display)]))` years, with peak survey activity in `r names(sort(table(pepper_data$Year_Display, useNA='ifany'), decreasing=TRUE)[1])` (`r max(table(pepper_data$Year_Display, useNA='ifany'))` records).

## Key Findings Summary

- **Total Observations**: `r nrow(pepper_data)` records across all years (2018-2025)
- **Peak Survey Year**: `r names(sort(table(pepper_data$Year_Display, useNA='ifany'), decreasing=TRUE)[1])` with `r max(table(pepper_data$Year_Display, useNA='ifany'))` observations
- **Recent Activity**: `r nrow(pepper_recent)` observations in 2022-2025
- **Historical Baseline**: `r nrow(pepper_historical)` observations in 2018-2021
- **Data Coverage**: `r round((nrow(pepper_data) - sum(is.na(pepper_data$Year_Display))) / nrow(pepper_data) * 100, 1)`% of records have complete date information (using observation date with creation date fallback)

# Interactive Map Comparison

The following interactive map shows pepperweed populations across all years (2018-2025). Use the layer controls in the top-right corner to toggle between different years. The map includes all `r nrow(pepper_data)` documented observations, with feature creation dates used when observation dates are unavailable.

**Data Download**: [Download GeoJSON](pepperweed_data.geojson) - Complete dataset with all `r nrow(pepper_data)` pepperweed observations

```{r generate-geojson}
#| message: false
#| warning: false
#| echo: false

# Generate GeoJSON file for download
st_write(pepper_data, "pepperweed_data.geojson", driver = "GeoJSON", delete_dsn = TRUE)
```

```{r interactive-map}
#| message: false
#| warning: false

# Create comprehensive map with all years
combined_map <- leaflet(pepper_data) %>%
  # Standard basemaps
  addProviderTiles(providers$Esri.WorldImagery, group = "World Imagery") %>%
  addProviderTiles(providers$OpenStreetMap, group = "OpenStreetMap") %>%
  # Add 2018 markers
  addCircleMarkers(
    data = pepper_2018,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "purple",
    fillColor = "purple",
    fillOpacity = 0.7,
    weight = 2,
      popup = ~paste0(
        "<b>2018 Data</b><br>",
        "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
        "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
        "Species: ", Species, "<br>",
        "Abundance: ", Abundance, "<br>",
        "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
        "Notes: ", ifelse(is.na(Notes), "None", Notes)
      ),
    group = "2018 Data"
  ) %>%
  # Add 2019 markers
  addCircleMarkers(
    data = pepper_2019,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "blue",
    fillColor = "blue",
    fillOpacity = 0.7,
    weight = 2,
    popup = ~paste0(
      "<b>2019 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2019 Data"
  ) %>%
  # Add 2020 markers
  addCircleMarkers(
    data = pepper_2020,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "green",
    fillColor = "green",
    fillOpacity = 0.7,
    weight = 2,
    popup = ~paste0(
      "<b>2020 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2020 Data"
  ) %>%
  # Add 2021 markers
  addCircleMarkers(
    data = pepper_2021,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "orange",
    fillColor = "orange",
    fillOpacity = 0.7,
    weight = 2,
    popup = ~paste0(
      "<b>2021 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2021 Data"
  ) %>%
  # Add 2022 markers
  addCircleMarkers(
    data = pepper_2022,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "yellow",
    fillColor = "yellow",
    fillOpacity = 0.7,
    weight = 2,
    popup = ~paste0(
      "<b>2022 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2022 Data"
  ) %>%
  # Add 2023 markers
  addCircleMarkers(
    data = pepper_2023,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "red",
    fillColor = "red",
    fillOpacity = 0.7,
    weight = 2,
    popup = ~paste0(
      "<b>2023 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2023 Data"
  ) %>%
  # Add 2024 markers
  addCircleMarkers(
    data = pepper_2024,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "darkred",
    fillColor = "darkred",
    fillOpacity = 0.8,
    weight = 3,
    popup = ~paste0(
      "<b>2024 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2024 Data"
  ) %>%
  # Add 2025 markers
  addCircleMarkers(
    data = pepper_2025,
    radius = ~ifelse(Abundance > 100, 8, ifelse(Abundance > 25, 6, 4)),
    color = "black",
    fillColor = "black",
    fillOpacity = 0.9,
    weight = 3,
    popup = ~paste0(
      "<b>2025 Data</b><br>",
      "Date: ", format(Date_Display, "%Y-%m-%d"), "<br>",
      "Date Source: ", ifelse(is.na(Year_Observed), "Creation Date", "Observation Date"), "<br>",
      "Species: ", Species, "<br>",
      "Abundance: ", Abundance, "<br>",
      "Height: ", ifelse(is.na(Height), "Unknown", paste(Height, "m")), "<br>",
      "Notes: ", ifelse(is.na(Notes), "None", Notes)
    ),
    group = "2025 Data"
  ) %>%
  addLayersControl(
    baseGroups = c("World Imagery", "OpenStreetMap"),
    overlayGroups = c("2018 Data", "2019 Data", "2020 Data", "2021 Data", "2022 Data", "2023 Data", "2024 Data", "2025 Data"),
    options = layersControlOptions(collapsed = FALSE)
  ) %>%
  addLegend(
    position = "bottomright",
    colors = c("purple", "blue", "green", "orange", "yellow", "red", "darkred", "black"),
    labels = c("2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025"),
    title = "Pepperweed Distribution by Year"
  )

combined_map
```
The interactive map above provides the primary visualization of pepperweed distribution patterns. The following analysis focuses on management priorities based on population characteristics and spatial patterns.



### Recent Sites Requiring Attention
```{r new-sites}
#| message: false
#| warning: false

# Show all recent sites (2024-2025) - prioritize small populations for early intervention
recent_sites <- pepper_data %>%
  filter(Year_Display >= 2024) %>%
  select(Date_Display, Abundance, Height, Notes, Year_Display) %>%
  # Sort by abundance (smallest first) to prioritize satellite populations
  arrange(Abundance, desc(Year_Display))

if(nrow(recent_sites) > 0) {
  datatable(recent_sites,
            caption = "Recent Pepperweed Sites (2024-2025) - Prioritize Small Populations for Early Intervention",
            options = list(pageLength = 15, scrollX = TRUE))
} else {
  cat("No recent sites found.")
}
```


## Data Sources
- **Primary Source**: [ArcGIS Online Noxious Weeds 2025 Feature Service](https://services.arcgis.com/0jRlQ17Qmni5zEMr/arcgis/rest/services/Noxious_Weeds_2025_view/FeatureServer/0)

- **Last Updated**: `r max(pepper_data$CreationDate, na.rm = TRUE)`
- **Coordinate System**: WGS84 (EPSG:4326)

## Limitations
- Data represents documented observations only
- Population estimates may vary based on survey timing and conditions
- Some areas may be under-sampled due to access constraints
- Abundance categories are based on field estimates

# Conclusion

The comprehensive 2018-2025 analysis reveals important trends in pepperweed distribution within the LORP area. The interactive mapping tool provides land managers with a visualization tool for identifying treatment areas over time.



---

*This analysis is automatically updated when new data is added to the ArcGIS feature service.*
